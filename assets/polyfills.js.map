{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./source/scripts/polyfills.js","webpack:///./node_modules/intersection-observer/intersection-observer.js","webpack:///./node_modules/details-element-polyfill/dist/details-element-polyfill.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","document","IntersectionObserverEntry","this","intersectionRatio","registry","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","observe","target","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","entry","_monitorIntersections","_checkForIntersections","unobserve","filter","length","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","Math","max","min","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","indexOf","index","splice","targetArea","intersectionArea","Number","toFixed","callback","opt_options","fn","timeout","timer","options","setTimeout","rootMargin","join","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","el","err","child","parentNode","host","setAttribute","removeAttribute","open","createElement","elementIsNative","HTMLDetailsElement","support","styles","_ref","setAccessibilityAttributes","tagName","concat","getElementsByTagName","findElementsWithTagName","summary","details","findClosestElementWithTagName","hasAttribute","eventIsSignificant","defaultPrevented","ctrlKey","metaKey","shiftKey","isContentEditable","onTogglingTrigger","which","keyCode","preventDefault","triggerToggle","createEvent","initEvent","dispatchEvent","closest","head","insertAdjacentHTML","constructor","getOwnPropertyDescriptor","defineProperties","set","_value","_this","wasOpen","result","querySelector","_this2","mutations","mutation","addedNodes","attributeName","getAttribute","isOpen"],"mappings":"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","file":"polyfills.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import 'intersection-observer'; // eslint-disable-line\nimport 'details-element-polyfill'; // eslint-disable-line\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","/*\nDetails Element Polyfill 2.4.0\nCopyright © 2019 Javan Makhmali\n */\n(function() {\n  \"use strict\";\n  var element = document.createElement(\"details\");\n  var elementIsNative = typeof HTMLDetailsElement != \"undefined\" && element instanceof HTMLDetailsElement;\n  var support = {\n    open: \"open\" in element || elementIsNative,\n    toggle: \"ontoggle\" in element\n  };\n  var styles = '\\ndetails, summary {\\n  display: block;\\n}\\ndetails:not([open]) > *:not(summary) {\\n  display: none;\\n}\\nsummary::before {\\n  content: \"►\";\\n  padding-right: 0.3rem;\\n  font-size: 0.6rem;\\n  cursor: default;\\n}\\n[open] > summary::before {\\n  content: \"▼\";\\n}\\n';\n  var _ref = [], forEach = _ref.forEach, slice = _ref.slice;\n  if (!support.open) {\n    polyfillStyles();\n    polyfillProperties();\n    polyfillToggle();\n    polyfillAccessibility();\n  }\n  if (support.open && !support.toggle) {\n    polyfillToggleEvent();\n  }\n  function polyfillStyles() {\n    document.head.insertAdjacentHTML(\"afterbegin\", \"<style>\" + styles + \"</style>\");\n  }\n  function polyfillProperties() {\n    var prototype = document.createElement(\"details\").constructor.prototype;\n    var setAttribute = prototype.setAttribute, removeAttribute = prototype.removeAttribute;\n    var open = Object.getOwnPropertyDescriptor(prototype, \"open\");\n    Object.defineProperties(prototype, {\n      open: {\n        get: function get() {\n          if (this.tagName == \"DETAILS\") {\n            return this.hasAttribute(\"open\");\n          } else {\n            if (open && open.get) {\n              return open.get.call(this);\n            }\n          }\n        },\n        set: function set(value) {\n          if (this.tagName == \"DETAILS\") {\n            return value ? this.setAttribute(\"open\", \"\") : this.removeAttribute(\"open\");\n          } else {\n            if (open && open.set) {\n              return open.set.call(this, value);\n            }\n          }\n        }\n      },\n      setAttribute: {\n        value: function value(name, _value) {\n          var _this = this;\n          var call = function call() {\n            return setAttribute.call(_this, name, _value);\n          };\n          if (name == \"open\" && this.tagName == \"DETAILS\") {\n            var wasOpen = this.hasAttribute(\"open\");\n            var result = call();\n            if (!wasOpen) {\n              var summary = this.querySelector(\"summary\");\n              if (summary) summary.setAttribute(\"aria-expanded\", true);\n              triggerToggle(this);\n            }\n            return result;\n          }\n          return call();\n        }\n      },\n      removeAttribute: {\n        value: function value(name) {\n          var _this2 = this;\n          var call = function call() {\n            return removeAttribute.call(_this2, name);\n          };\n          if (name == \"open\" && this.tagName == \"DETAILS\") {\n            var wasOpen = this.hasAttribute(\"open\");\n            var result = call();\n            if (wasOpen) {\n              var summary = this.querySelector(\"summary\");\n              if (summary) summary.setAttribute(\"aria-expanded\", false);\n              triggerToggle(this);\n            }\n            return result;\n          }\n          return call();\n        }\n      }\n    });\n  }\n  function polyfillToggle() {\n    onTogglingTrigger(function(element) {\n      element.hasAttribute(\"open\") ? element.removeAttribute(\"open\") : element.setAttribute(\"open\", \"\");\n    });\n  }\n  function polyfillToggleEvent() {\n    if (window.MutationObserver) {\n      new MutationObserver(function(mutations) {\n        forEach.call(mutations, function(mutation) {\n          var target = mutation.target, attributeName = mutation.attributeName;\n          if (target.tagName == \"DETAILS\" && attributeName == \"open\") {\n            triggerToggle(target);\n          }\n        });\n      }).observe(document.documentElement, {\n        attributes: true,\n        subtree: true\n      });\n    } else {\n      onTogglingTrigger(function(element) {\n        var wasOpen = element.getAttribute(\"open\");\n        setTimeout(function() {\n          var isOpen = element.getAttribute(\"open\");\n          if (wasOpen != isOpen) {\n            triggerToggle(element);\n          }\n        }, 1);\n      });\n    }\n  }\n  function polyfillAccessibility() {\n    setAccessibilityAttributes(document);\n    if (window.MutationObserver) {\n      new MutationObserver(function(mutations) {\n        forEach.call(mutations, function(mutation) {\n          forEach.call(mutation.addedNodes, setAccessibilityAttributes);\n        });\n      }).observe(document.documentElement, {\n        subtree: true,\n        childList: true\n      });\n    } else {\n      document.addEventListener(\"DOMNodeInserted\", function(event) {\n        setAccessibilityAttributes(event.target);\n      });\n    }\n  }\n  function setAccessibilityAttributes(root) {\n    findElementsWithTagName(root, \"SUMMARY\").forEach(function(summary) {\n      var details = findClosestElementWithTagName(summary, \"DETAILS\");\n      summary.setAttribute(\"aria-expanded\", details.hasAttribute(\"open\"));\n      if (!summary.hasAttribute(\"tabindex\")) summary.setAttribute(\"tabindex\", \"0\");\n      if (!summary.hasAttribute(\"role\")) summary.setAttribute(\"role\", \"button\");\n    });\n  }\n  function eventIsSignificant(event) {\n    return !(event.defaultPrevented || event.ctrlKey || event.metaKey || event.shiftKey || event.target.isContentEditable);\n  }\n  function onTogglingTrigger(callback) {\n    addEventListener(\"click\", function(event) {\n      if (eventIsSignificant(event)) {\n        if (event.which <= 1) {\n          var element = findClosestElementWithTagName(event.target, \"SUMMARY\");\n          if (element && element.parentNode && element.parentNode.tagName == \"DETAILS\") {\n            callback(element.parentNode);\n          }\n        }\n      }\n    }, false);\n    addEventListener(\"keydown\", function(event) {\n      if (eventIsSignificant(event)) {\n        if (event.keyCode == 13 || event.keyCode == 32) {\n          var element = findClosestElementWithTagName(event.target, \"SUMMARY\");\n          if (element && element.parentNode && element.parentNode.tagName == \"DETAILS\") {\n            callback(element.parentNode);\n            event.preventDefault();\n          }\n        }\n      }\n    }, false);\n  }\n  function triggerToggle(element) {\n    var event = document.createEvent(\"Event\");\n    event.initEvent(\"toggle\", false, false);\n    element.dispatchEvent(event);\n  }\n  function findElementsWithTagName(root, tagName) {\n    return (root.tagName == tagName ? [ root ] : []).concat(typeof root.getElementsByTagName == \"function\" ? slice.call(root.getElementsByTagName(tagName)) : []);\n  }\n  function findClosestElementWithTagName(element, tagName) {\n    if (typeof element.closest == \"function\") {\n      return element.closest(tagName);\n    } else {\n      while (element) {\n        if (element.tagName == tagName) {\n          return element;\n        } else {\n          element = element.parentNode;\n        }\n      }\n    }\n  }\n})();\n"],"sourceRoot":""}